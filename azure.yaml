tosca_definitions_version: cloudify_dsl_1_3


imports:
  - http://cloudify.co/spec/cloudify/4.5.5/types.yaml
  - plugin:cloudify-azure-plugin
  - plugin:cloudify-utilities-plugin


inputs:

  azure_subscription_id:
    default: { get_secret: azure_subscription_id }

  azure_tenant_id:
    default: { get_secret: azure_tenant_id }

  azure_client_id:
    default: { get_secret: azure_client_id }

  azure_client_secret:
    default: { get_secret: azure_client_secret }

  azure_location:
    default: { get_secret: azure_location }

  image:
    description: Image information
    default:
      publisher: OpenLogic
      offer: CentOS
      sku: 7.6
      version: latest

  size:
    description: Name of Virtual Machine Size in Azure.
    default: Standard_B1s

  retry_after:
    type: integer
    default: 60

  network_deployment_name:
    default: azure-example-network

  use_existing_network_deployment:
    default: true

  resource_prefix:
    description: Prefix of every resource created at this deployment on Azure.
    default: { get_secret: resource_prefix }

  resource_suffix:
    description: Suffix of every resource created at this deployment on Azure.
    default: { get_secret: resource_suffix }

  name:
    type: string
    default: centosvm


dsl_definitions:

  azure_config: &azure_config
    subscription_id: { get_input: azure_subscription_id }
    tenant_id: { get_input: azure_tenant_id }
    client_id: { get_input: azure_client_id }
    client_secret: { get_input: azure_client_secret }


node_templates:

  network_deployment:
    type: cloudify.nodes.DeploymentProxy
    properties:
      resource_config:
        blueprint:
          id: { get_input: network_deployment_name }
          blueprint_archive: https://github.com/cloudify-examples/azure-example-network/archive/master.zip
          main_file_name: simple-blueprint.yaml
          external_resource: { get_input: use_existing_network_deployment }
        deployment:
          id: { get_input: network_deployment_name }
          inputs:
            resource_prefix: { get_input: resource_prefix }
            resource_suffix: { get_input: resource_suffix }
          outputs:
            resource_group: resource_group_value
            virtual_network: virtual_network_value
            public_subnet: public_subnet_value
            private_subnet: private_subnet_value
          external_resource: { get_input: use_existing_network_deployment }

  resource_group:
    type: cloudify.azure.nodes.ResourceGroup
    properties:
      azure_config: *azure_config
      name: { get_attribute: [network_deployment, deployment, outputs, resource_group_value] }
      location: { get_input: azure_location }
      use_external_resource: true
    relationships:
      - type: cloudify.relationships.depends_on
        target: network_deployment

  virtual_network:
    type: cloudify.azure.nodes.network.VirtualNetwork
    properties:
      azure_config: *azure_config
      name: { get_attribute: [network_deployment, deployment, outputs, virtual_network_value] }
      location: { get_input: azure_location }
      use_external_resource: true
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group

  public_subnet:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      azure_config: *azure_config
      name: { get_attribute: [network_deployment, deployment, outputs, public_subnet_value] }
      location: { get_input: azure_location }
      use_external_resource: true
    relationships:
      - type: cloudify.azure.relationships.contained_in_virtual_network
        target: virtual_network

  storage_account:
    type: cloudify.azure.nodes.storage.StorageAccount
    properties:
      azure_config: *azure_config
      use_external_resource: false
      name: { concat: [{ get_input: resource_prefix }, { get_input: name }, 'sa', { get_input: resource_suffix }] }
      location: { get_input: azure_location }
      resource_config:
        accountType: Standard_LRS
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group

  vm:
    type: cloudify.azure.nodes.compute.VirtualMachine
    properties:
      location: { get_input: azure_location }
      retry_after: { get_input: retry_after }
      os_family: linux
      name: { concat: [{ get_input: resource_prefix }, { get_input: name }, { get_input: resource_suffix }] }
      resource_config:
        hardwareProfile:
          vmSize: { get_input: size }
        storageProfile:
          imageReference: { get_input: image }
        osProfile:
          computerName: { get_property: [SELF, name] }
          adminUsername: centos
          linuxConfiguration:
            ssh:
              publicKeys:
                - path: /home/centos/.ssh/authorized_keys
                  keyData: { get_secret: agent_key_public }
            disablePasswordAuthentication: True
      agent_config:
        install_method: none
      azure_config: *azure_config
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.connected_to_storage_account
        target: storage_account
      - type: cloudify.azure.relationships.connected_to_nic
        target: public_nic

  public_security_group:
    type: cloudify.azure.nodes.network.NetworkSecurityGroup
    properties:
      name: public_security_group
      location: { get_input: azure_location }
      name: { concat: [{ get_input: resource_prefix }, 'public_sg', { get_input: resource_suffix }] }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      resource_config:
        securityRules:
          - name: sg_http
            properties:
              description: HTTP access
              protocol: Tcp
              sourcePortRange: '*'
              destinationPortRange: 80
              sourceAddressPrefix: '*'
              destinationAddressPrefix: '*'
              priority: 104
              access: Allow
              direction: Inbound
          - name: sg_http_8080
            properties:
              description: HTTP access
              protocol: Tcp
              sourcePortRange: '*'
              destinationPortRange: 8080
              sourceAddressPrefix: '*'
              destinationAddressPrefix: '*'
              priority: 103
              access: Allow
              direction: Inbound
          - name: sg_ssh
            properties:
              description: SSH access
              protocol: Tcp
              sourcePortRange: '*'
              destinationPortRange: 22
              sourceAddressPrefix: '*'
              destinationAddressPrefix: '*'
              priority: 102
              access: Allow
              direction: Inbound
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group

  public_nic:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      location: { get_input: azure_location }
      name: { concat: [{ get_input: resource_prefix }, { get_input: name }, '_public_nic', { get_input: resource_suffix }] }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      primary: true
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.nic_connected_to_network_security_group
      target: public_security_group
    - type: cloudify.azure.relationships.nic_connected_to_ip_configuration
      target: public_ip_cfg

  public_ip_cfg:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      location: { get_input: azure_location }
      name: { concat: [{ get_input: resource_prefix }, { get_input: name }, '_public_ic', { get_input: resource_suffix }] }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
        target: public_subnet
      - type: cloudify.azure.relationships.ip_configuration_connected_to_public_ip
        target: public_ip_address

  public_ip_address:
    type: cloudify.azure.nodes.network.PublicIPAddress
    properties:
      azure_config:  *azure_config
      name: { concat: [{ get_input: resource_prefix }, { get_input: name }, '_public_ia', { get_input: resource_suffix }] }
      location: { get_input: azure_location }
      retry_after: { get_input: retry_after }
      resource_config:
        publicIPAllocationMethod: Static
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group


capabilities:
  vm_ip:
    value: { get_attribute: [vm, ip] }
  vm_public_ip:
    value: { get_attribute: [vm, public_ip] }
  private_key_content:
    value: { get_secret: agent_key_private }
